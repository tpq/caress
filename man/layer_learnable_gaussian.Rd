% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/2-layers-learnable-gaussian.R
\name{layer_learnable_gaussian}
\alias{layer_learnable_gaussian}
\title{Initialize Learnable Layer}
\usage{
layer_learnable_gaussian(input, size, name = NULL)
}
\arguments{
\item{input}{The incoming layer.}

\item{size}{The total number of nodes in the Gaussian kernel.}

\item{name}{A string. The prefix label for all layers.}
}
\value{
A layer of learnable weights.
}
\description{
This function creates a layer of an arbitrary size, such that the
 activity of its nodes are spatially organized to follow a Gaussian
 distribution (based on a learnable mu and sigma).
}
\details{
This function is probably not useful in practice, but is included
 as a pre-cursor to other learnable Gaussian layers.
}
\examples{
library(keras)
library(caress)
x <- as.matrix(iris[,1:4])
y <- to_categorical(as.numeric(iris[,5])-1)
k_clear_session()
input <- from_input(x)
input2dense <- input \%>\%
  layer_dense(1)
weight <- input \%>\%
  layer_learnable_gaussian(100)
target <- layer_lambda(list(input2dense, weight), function(x) x[[1]]+x[[2]]) \%>\%
  layer_flatten() \%>\%
  to_output(y)
m <- prepare(input, target)
build(m, x, y)
plot(as.numeric(get_layer_output(m, x, "input_gaussian")))
}
